module prime_number_checker(clk,start,number1,prime,done,total_clock);
input clk,start;
input[7:0] number1;
output reg[7:0] prime=0;
output reg done=0;
output reg[31:0] total_clock=0;

reg [31:0] clk_time=1'b0;
reg[7:0] counter=0;
reg[7:0] factor=0;
reg start_checking=1;
reg[7:0] num1;


always @(posedge clk)
    if(start==1'b1)
        clk_time=clk_time+1'b1;
    else
        begin
        prime=0;
        done=0;
        total_clock=0;
        counter=0;
        factor=0;
        start_checking=1;
        end



begin

always @(posedge clk)
    if(start==1'b1)
        if(start_checking)
            num1=number1;
        
 always @(posedge clk)
     if(start==1'b1)
        begin
            start_checking=1'b0;
            counter=counter+1;
            if(num1%counter==1'b0)
                factor=factor+1;   
        end
            
 always @(posedge clk)
        if(start==1'b1)
            if (counter==8'b11111111)
                begin
                if(factor==2'b10)
                    begin
                    done=1'b1;
                    if(prime==8'd0)
                            prime=num1;   
                    if(total_clock==32'd0)total_clock=clk_time;
                    end  
                else
                    if(factor>2'b10)
                       start_checking=1'b1;
                factor=1'b0;
                counter=1'b0;
                end
                
                
                      
end
                
  
endmodule
